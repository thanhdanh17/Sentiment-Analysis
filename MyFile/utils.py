from MyFile.library import *

emoji_set_up = ["üòÄ", "üòÉ", "üòÑ", "üòÅ", "üòÜ", "üòÖ", "üòÇ", "ü§£", "‚ò∫Ô∏è", "üòä", "üòá", "üôÇ", "üôÉ", "üòâ", "üòå", "üòç", "ü•∞", "üòò", "üòó",
               "üòô", "üòö", "üòã", "üòõ", "üòù", "üòú", "ü§™", "üòé", "ü§©", "ü•≥", "ü§≠", "ü§ë", "ü§§", "ü•±", "üò¥", "üò™", "üò∫", "üò∏", "üòπ", 
               "üòª", "üòΩ", "üßê", "ü•∏", "üòè", "ü´¢", "ü§´", "ü§•", "üò∂", "üò∂‚Äçüå´Ô∏è", "üòê", "üòë", "üò¨", "ü´†", "ü§¢", "ü§Æ", "ü§ß", "üò∑", 
               "ü§í", "ü§ï", "ü§®", "ü•≤", "ü•π", "üòí", "üòû", "üòî", "üòü", "üòï", "üôÅ", "‚òπÔ∏è", "üò£", "üòñ", "üò´", "üò©", "ü•∫", "üò¢", "üò≠", 
               "üòÆ‚Äçüí®", "ü§ß", "üò∑", "ü§í", "ü§ï", "üòµ", "üòµ‚Äçüí´", "ü´•", "ü§ê", 'üò†', 'üò°', 'üòë', 'üò§', 'üòà', 'üí©', 'üòï', 'üëé', 'üò©', 
               '‚òπ', 'üôÑ', 'üòî', 'ü§ß', 'ü§¨', 'ü´®', 'üôÑ', 'üòØ', 'üò¶', 'üòß', 'üòÆ', 'ü§ë', 'ü§†', 'üò≤', 'üòº', 'üôÄ', 'üòà', 'üëø', 'üëπ', 
               'üë∫', 'ü§°', 'üëª', 'üíÄ', '‚ò†Ô∏è', 'üëΩ', 'üëæ', 'ü§ñ', 'üéÉ', 'üò∞', 'üò®', 'üò±', 'üò®']

emoji_Enjoyment = ["üòÄ", "üòÉ", "üòÑ", "üòÅ", "üòÜ", "üòÖ", "üòÇ", "ü§£", "‚ò∫Ô∏è", "üòä", "üòá", "üôÇ", "üôÉ", "üòâ", "üòå", "üòç", "ü•∞", "üòò", "üòó",
                   "üòô", "üòö", "üòã", "üòõ", "üòù", "üòú", "ü§™", "üòé", "ü§©", "ü•≥", "ü§≠",  "ü§ë", "ü§§","ü•±", "üò¥", "üò™", "üò∫","üò∏", "üòπ", "üòª", "üòΩ",]
emoji_Disgust = [ "üßê", "ü•∏", "üòè", "ü´¢", "ü§´", "ü§•", "üò∂", "üò∂‚Äçüå´Ô∏è", "üòê", "üòë", "üò¨",  "ü´†",  "ü§¢", "ü§Æ", "ü§ß", "üò∑", "ü§í", "ü§ï"]
emoji_Sadness = ["ü§®", "ü•≤", "ü•π",  "üòí", "üòû", "üòî", "üòü", "üòï", "üôÅ", "‚òπÔ∏è", "üò£", "üòñ", "üò´", "üò©", "ü•∫", "üò¢", "üò≠", "üòÆ‚Äçüí®","ü§ß", "üò∑", "ü§í", "ü§ï"]
emoji_Anger = ["üòµ", "üòµ‚Äçüí´", "ü´•", "ü§ê", 'üò†', 'üò°', 'üòë', 'üò§', 'üòà', 'üí©', 'üòï', 'üëé', 'üò©', '‚òπ', 'üôÑ', 'üòî', 'ü§ß', 'ü§¨',]
emoji_Surprise = ["ü´®", "üôÑ","üòØ", "üò¶", "üòß", "üòÆ",  "ü§ë",  "ü§†", "üò≤", "üòº", "üôÄ",]
emoji_Fear = ["üòà", "üëø", "üëπ", "üë∫", "ü§°", "üëª", "üíÄ", "‚ò†Ô∏è", "üëΩ", "üëæ", "ü§ñ", "üéÉ", 'üò∞', 'üò®', 'üò±', 'üò®']

def emoji_pro(sentence):
    items = ["Enjoyment","Disgust", "Sadness", "Anger", "Surprise", "Fear"]
    list_char = [i for i in sentence.split()]
    len_list_char = len(list_char)
    count = 0
    for char in list_char:
        if ej.emoji_count(char):
            count += 1
    if count == len_list_char:
        count_emoji_Enjoyment = 0
        count_emoji_Disgust = 0
        count_emoji_Sadness = 0
        count_emoji_Anger = 0
        count_emoji_Surprise = 0
        count_emoji_Fear = 0
        
        for emoji in list_char:
            if emoji in emoji_Enjoyment:
                count_emoji_Enjoyment += 1
            if emoji in emoji_Disgust:
                count_emoji_Disgust += 1
            if emoji in emoji_Sadness:
                count_emoji_Sadness += 1
            if emoji in emoji_Anger:
                count_emoji_Anger += 1
            if emoji in emoji_Surprise:
                count_emoji_Surprise += 1
            if emoji in emoji_Fear:
                count_emoji_Fear += 1
                
        sum = count_emoji_Enjoyment + count_emoji_Disgust + count_emoji_Sadness + count_emoji_Anger + count_emoji_Surprise + count_emoji_Fear
        if sum >= int(len_list_char - 3):
            count_list = [count_emoji_Enjoyment, count_emoji_Disgust, count_emoji_Sadness, count_emoji_Anger, count_emoji_Surprise, count_emoji_Fear]
            max_value = max(count_list)
            index_of_max = count_list.index(max_value)
            label = str(items[index_of_max])
            return label
        else:
            label = "Other"
            return label
    else:
        label = "STR"
        return label


punctuation_to_remove = [
    '.', ',', ';', ':', '?', '!', "'", '"', '-', '_', '@', '#', '$', '%', '^', '&', '*', '(', ')', '[', ']', '{', '}', '/', '\\',
    '...', '^',
]

# Stopwords
StopWords = [
        'chs','cerrrr','aaaaa','aaaaaaa','aamir','abcxyz','ac','18','200','500','dek','thg','ƒëg','ƒës',
        'kkk','dcm','cu','·ª´m','xl','01','10','100', '11','12','13','14','15','150',
        '17','1700''1967','20','21','22','225','23','24','25','26','28','2_','2_3','30','300','3000','320','333',
        '33333','40','400','42','45','48', '50','5000','580','60','63','66','75','78','80','800','81','850','90','900',
        '99','99999','_200','_5','ah','bn','c3','chg','cp','d√≤g','hlin',
        'vcb','tr∆∞∆°','tr∆∞en','amir','ga','1700','1967','oaaaaaaa','bg','chaiii','cmm','cmnl','c√£',
        'hloz','imdb','kau','kbh','matlon','mu√¥','nh','nhma','p30','16','250','56','adm','ng∆∞∆°','per',
        'lƒÉ', 'mi√™' , 'haizzz','haiz','dlm','qu√†ooo','hee','nv', 'hmmmmmmm','beep',
        'zoe','pogba','mu','l√≤a','haizzzz','dg','pk','lz','thƒÉ','nh·ªìn','tn','toau','bankon',
        'haizaaa','vcd','aw','kkkk','nghr','ds','anw','pg','ml','haaa','dma','cigar','vanew','doume',
        'oy','azz','1imdb','valak','haizz','xd','p30','x10','x20','vll','ss','ƒëcm','disme','xiaolon','disss','tml',
        'm√≥e','sury','fucklong','uwu','mlz','dumehuhonchimen','vks','ewww','ph','awwww','minvolum','kp','evn',
        'oimeoi','ƒë∆∞','rv', 'per ∆° ∆° ∆°','ah', '∆° ∆° ∆°'
]

EditSpelling = {
    "trog": "trong", "ne": "n√®", "thi ch": "th√≠ch", "va i": "v√£i", "hs": "h·ªçc sinh","kbh": "kh√¥ng bao gi·ªù","th√≠ ch":"th√≠ch","fanpage":"trang m·∫°ng","showbiz":"truy·ªÅn h√¨nh",
     "p·∫°t": "ph·∫°t", "oto": "√¥ t√¥", "sgk": "s√°ch gi√°o khoa", "cv": "c√¥ng vi·ªác", "kq": "k·∫øt qu·∫£", "mj": "m√¨nh",
     "ne": "n√®",  "nh√¨u": "nhi·ªÅu", "r·ª•nng": "r·ª•ng", "cta": "ch√∫ng ta",  "ks": "kh√°ch s·∫°n", "admin": "ng∆∞·ªùi qu·∫£n tr·ªã","gym":"th·ªÉ h√¨nh", "wtf":"v√£i","cute":"d·ªÖ th∆∞∆°ng",
     "√†k": "√†", "nyc": "ng∆∞·ªùi y√™u c≈©",  "c·ªßng": "c≈©ng",
     "chowi": "ch∆°i", "gane": "game", "v·∫©n": "v·∫´n", "f·∫£i": "ph·∫£i", "y√™uc": "y√™u", "vi·∫πc": "vi·ªác", "l√°p": "l√°o",
     "zo": "v√†o",  "nta": "ng∆∞·ªùi ta", "lsao": "l√†m sao", "t∆∞∆°": "t∆∞∆°i", "b∆∞∆° c": "b∆∞·ªõc",
     "h√†g": "h√†ng", "lu√¥nnn": "lu√¥n", "mink": "m√¨nh", "ƒë∆∞∆° c": "ƒë∆∞·ª£c", "v√£i_ch∆∞·ªüng": "v√£i ch∆∞·ªüng",
     "kha c": "kh√°c", "ko": "kh√¥ng", "ch·ªùiiiii": "tr·ªùi", "bi√™": "bi·∫øt", "qu√°aaaa": "qu√°", "t√¥iii": "t√¥i",
     "uiiiii": "ui", "pheee": "ph√™", "pha i": "ph·∫£i",  "ƒë·∫•yyyy": "ƒë·∫•y",
     "y√™uc": "y√™u", "ntnay": "nh∆∞ th·∫ø n√†y",  "th√¥iiii": "th√¥i", "2 ac": "2 anh ch·ªã",
     "v·ªõiiiiii": "v·ªõi", "zay": "v·∫≠y", "z√°y": "v√°y", "hlv": "hu·∫•n luy·ªán vi√™n",  "bth": "b√¨nh th∆∞·ªùng",
    "nge": "nghe", "taooo": "tao", "b√πn": "bu·ªìn", "inter": "internet", "xanhhhh": "xanh", "xog": "xong",
      "chaii": "chai",  "ƒëzai": "ƒë·∫πp trai", "t":"tao",
     "toau": "tao", "ƒëag": "ƒëang", "b·ªâu": "b·∫£o", "ctay": "chia tay",  "qtrong": "quan tr·ªçng",
    "nghr": "nghe", "saoooo": "sao", "nhaaaaaaaa": "nha", "d√≤m": "nh√¨n", "th·∫≥g": "th·∫≥ng", "gi·ªëg": "gi·ªëng",
    "nh∆∞g": "nh∆∞ng", "r·ªìiii": "r·ªìi", "sug": "sung", "v·∫´": "v·∫´n", "m√µi": "m·ªèi", "r·ªìiiiii": "r·ªìi",
      "qcao": "qu·∫£ng c√°o", "xi·ªÅn": "ti·ªÅn", "th·∫° timmmmm": "th·∫£ tim ", "th∆∞∆°nggg": "th∆∞∆°ng", "ch·ªØi": "ch·ª≠i",
    "thi√¨": "th√¨", "m·∫•t d·∫≠y": "m·∫•t d·∫°y", "chj": "ch·ªã", "vi√™ c": "vi·ªác", "aiii ": "ai",
    "ch·ªï": "ch·ªó",  "chaiii": "trai", "kinhh": "kinh", "tau": "tao", "v√¢ y": "v·∫≠y", "ph·∫£u": "ph·∫£i","t":"tao",
    "dth": "d·ªÖ th∆∞∆°ng", "ƒë√¢yy": "ƒë√¢y", " zai": "trai",  "ngiu": "ng∆∞·ªùi y√™u", "b trai": "b·∫°n trai",
    "cungz": "c≈©ng v·∫≠y", "thcs": "trung h·ªçc c∆° s·ªü", "m√†aaa": "m√†", "th√®n": "th·∫±ng", "stk": "s·ªë t√†i kho·∫£n",
    "nhma": "nh∆∞ng m√†", "∆°iii": "∆°i", "uiii": "ui", "l√™nnnnn": "l√™n", "csgt": "c·∫£nh s√°t giao th√¥ng", "ƒëiiii": "ƒëi",
    "th√≠ck": "th√≠ch", "∆°iiii": "∆°i", "v·∫≠yyyyy": "v·∫≠y", "y√™uu": "y√™u", "v√£iii": "v√£i", "ƒëiii": "ƒëi", "v√£iiii": "v√£i",
    "h·ªèg ": "h·ªèng", "d√≤g": "d√≤ng", "mxh": "m·∫°ng x√£ h·ªôi", "vk": "v·ª£", "ng·ª´oi": "ng∆∞·ªùi", "c√†r√¥t": "c√† r·ªët", "r·ªìii": "r·ªìi",
    "nhaaaa": "nha", "caooooo": "cao", "cug": "c≈©ng", "ng·ªóg": "ng·ªóng", "m√∫n": "mu·ªën", "r·ª•g": "r·ª•ng", "tr·ªùiiiiii": "tr·ªùi",
    "kh√¥g": "kh√¥ng", "r√≤ii": "r·ªìi", "gvcn": "gi√°o vi√™n ch·ªß nhi·ªám", "hqua": "h√¥m qua", "nhaaa": "nha", "g√©c": "gh√©t",
    "thik ": "th√≠ch", "tayyy": "tay", "g√™": "gh√™", "troai": "trai", "thoii": "th√¥i", "taoooo": "tao", "th√©": "th·∫ø",
    "c an": "c√¥ng an", "z·∫°i": "d·∫°y", "moiij ": "m·ªôt", "c∆∞·ªù": "c∆∞·ªùi", "hi·∫ømkkk": "hi·∫øm", "n∆∞a": "n·ªØa", "√™iiii": "∆°i",
    "t·ªµ": "t√≠", "c≈©g": "c≈©ng", "2e": "2 em", "n·ªïiiiii": "n·ªïi", "tnao": "th·∫ø n√†o", "du r√∫": "ru r√∫", "√¥iii": "√¥i",
    "p·∫£i": "ph·∫£i", "thix": "th√≠ch", "d·ª•ng tr·ª©ng": "r·ª•ng tr·ª©ng", "bjt": "bi·∫øt","or": "ho·∫∑c","of": "c·ªßa","you": "b·∫°n", "crush": "ng∆∞·ªùi y√™u",  "be carefull": "quan t√¢m",
    "tui thi ÃÅ ch va Ãâ i ÃÅ m√†y ma ÃÄ ƒÉn nh·ªâ ÃÄ u no ÃÅ ng∆∞·ªùi ÃÅ m√†y m·ªçi ng∆∞·ªùi anh Ã£ bi Ã£ l∆° Ãâ Ã£ ng∆∞·ªùi":"T√¥i th√≠ch v·∫£i, m√†y m√† ƒÉn nhi·ªÅu, ng∆∞·ªùi m√†y b·ªã l·ªü ƒë·∫•y"
}
Key_EditSpelling = list(EditSpelling.keys())

labels = {
        "Enjoyment": 0,
        "Disgust": 1,
        "Sadness": 2,
        "Anger": 3,
        "Surprise": 4,
        "Fear" : 5,
        "Other" : 6
}

def remove_extra_spaces(text):
    # H√† Kh·∫£i    Ho√†n -> H√† Kh·∫£i Ho√†n
    return re.sub(r"\s+", " ", text)

def clean_Sentence(sentence):
    for punctuation in punctuation_to_remove:
        if punctuation in sentence:
            str_new = sentence.replace(punctuation,"")
            sentence = str_new
    
    for i in range(len(StopWords)):
        stop_word = StopWords[i].lower()
        sentence = sentence.lower().strip()
        sentence = " " + sentence.strip() + " "
        stop_word_space = " " + stop_word + " "
        if stop_word_space in sentence:
            str_new = sentence.replace(stop_word,"")
            sentence = str_new.strip()

    for i in range(len(Key_EditSpelling)):
        spellingword = Key_EditSpelling[i].lower()
        sentence = " " + sentence.lower().strip() + " "
        spellingword_space = " " + spellingword + " "
        if spellingword_space in sentence:
            good_spelling = sentence.replace(spellingword,EditSpelling[spellingword])
            sentence = good_spelling.strip()
    
    sentence = ViTokenizer.tokenize(" ".join(list(tf.keras.preprocessing.text.text_to_word_sequence(remove_extra_spaces(sentence)))).lower())
    
    return sentence


#-------------------------Model-------------------------
class SentimentClassifier(nn.Module):
    def __init__(self, n_classes):
        super(SentimentClassifier, self).__init__()
        self.bert = AutoModel.from_pretrained("vinai/phobert-base")
        self.drop = nn.Dropout(p=0.3)
        self.fc = nn.Linear(self.bert.config.hidden_size, n_classes)
        nn.init.normal_(self.fc.weight, std=0.02)
        nn.init.normal_(self.fc.bias, 0)

    def forward(self, input_ids, attention_mask):
        last_hidden_state, output = self.bert(
            input_ids=input_ids,
            attention_mask=attention_mask,
            return_dict=False # Dropout will errors if without this
        )

        x = self.drop(output)
        x = self.fc(x)
        return x